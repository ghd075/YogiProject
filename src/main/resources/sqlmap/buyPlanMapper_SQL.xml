<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.BuyPlanMapper">

	<resultMap type="touritemsVO" id="tourMap">
	<id property="contentId" column="content_id"/>
	<result property="contentId" column="content_id"/>
	<result property="areaCode" column="area_code"/>
	<result property="sigunguCode" column="sigungu_code"/>
	<result property="tourCate" column="tour_cate"/>
	<result property="contenttypeId" column="contenttype_id"/>
	<result property="firstImage" column="first_image"/>
	<result property="longitude" column="longitude"/>
	<result property="latitude" column="latitude"/>
	<result property="address" column="address"/>
	<result property="tel" column="tel"/>
	<result property="title" column="title"/>
	<result property="zipcode" column="zipcode"/>
	</resultMap>
	
	<resultMap type="detatilPlannerVO" id="detailMap">
	<id property="spNo" column="sp_no"/>
	<result property="spNo" column="sp_no"/>
	<result property="spDay" column="sp_day"/>
	<result property="spSday" column="sp_sday"/>
	<result property="spEday" column="sp_eday"/>
	<result property="contentId" column="content_id"/>
	<result property="plNo" column="pl_no"/>
	<result property="spOrder" column="sp_order"/>
	<result property="spDistance" column="sp_distance"/>
	<collection property="tourVO" resultMap="tourMap"/>
	</resultMap>
	
	<resultMap type="plannerVO" id="planerMap">
	<id property="plNo" column="pl_no"/>
	<result property="plNo" column="pl_no"/>
	<result property="memId" column="mem_id"/>
	<result property="plRdate" column="pl_rdate"/>
	<result property="plTitle" column="pl_title"/>
	<result property="plMsize" column="pl_msize"/>
	<result property="plPrivate" column="pl_private"/>
	<result property="plTheme" column="pl_theme"/>
	<result property="plThumburl" column="pl_thumburl"/>
	<collection property="detailList" resultMap="detailMap"/>
	</resultMap>

	<select id="getAllDpsBuyPlan" parameterType="long" resultMap="planerMap">
		SELECT
		    P.*, SP.*, TR.*
		FROM
		    PLANER P
		LEFT OUTER JOIN
		    S_PLANER SP ON P.PL_NO = SP.PL_NO
		LEFT OUTER JOIN
		    TOURITEMS TR ON SP.CONTENT_ID = TR.CONTENT_ID
		WHERE
		    P.PL_NO = #{plNo}
		ORDER BY
		    SP.SP_DAY ASC, SP.SP_ORDER ASC
	</select>
	
	<select id="getDayDpsBuyPlan" parameterType="detatilPlannerVO" resultMap="detailMap">
		SELECT
		    P.*, SP.*, TR.*
		FROM
		    PLANER P
		LEFT OUTER JOIN
		    S_PLANER SP ON P.PL_NO = SP.PL_NO
		LEFT OUTER JOIN
		    TOURITEMS TR ON SP.CONTENT_ID = TR.CONTENT_ID
		WHERE
		    P.PL_NO = #{plNo} AND SP.SP_DAY = #{spDay}
		ORDER BY
		    SP.SP_DAY ASC, SP.SP_ORDER ASC
	</select>
	
	<select id="getCurNum" parameterType="long" resultType="int">
		SELECT
			mategroup_currentnum
		FROM
			mategroup
		WHERE
			pl_no = #{plNo}
	</select>
	
	<select id="getGroupPoint" parameterType="long" resultType="planerVO">
		SELECT 
			mg_no
			, pl_no
			, mategroup_recruiter
			, mategroup_currentnum
			, mategroup_status
			, mategroup_point
		FROM 
			mategroup 
		WHERE 
			pl_no = #{plNo}
	</select>
	
	<select id="getDeductStep" parameterType="HashMap" resultType="int">
		SELECT
			mategroup_agree
		FROM
			mategroup_member
		WHERE
			mategroup_id = #{memId} AND mg_no = (SELECT mg_no FROM mategroup WHERE pl_no = #{plNo})
	</select>
	
	<select id="getMemPoint" parameterType="String" resultType="int">
		SELECT
			mem_point
		FROM
			members	
		WHERE
			mem_id = #{memId}
	</select>
	
	<update id="chargePoint" parameterType="HashMap">
		UPDATE
			members
		SET
			mem_point = #{chargePoint}
		WHERE
			mem_id = #{memId}
	</update>
	
	<update id="updateGroupPoint" parameterType="HashMap">
		UPDATE
			mategroup
		SET
			mategroup_point = #{resultGroupPoint}
		WHERE
			pl_no = #{plNo}
	</update>
	
	<update id="changeAgreeStatus" parameterType="HashMap">
		UPDATE
			mategroup_member
		SET
			mategroup_agree = 1
		WHERE
			mategroup_id = #{memId} AND mg_no = (SELECT mg_no FROM mategroup WHERE pl_no = #{plNo})
	</update>
	
	<select id="getResultPoint" parameterType="long" resultType="int">
		SELECT
			mategroup_point
		FROM 
			mategroup
		WHERE 
			pl_no = #{plNo}
	</select>
	
	<select id="isAllGmDeducted" parameterType="long" resultType="int">
		SELECT
			count(mategroup_id)
		FROM
			mategroup_member
		WHERE
			mg_no = (SELECT mg_no FROM mategroup WHERE pl_no = #{plNo})
		AND
			mategroup_agree = 1
	</select>
	
	<update id="updateGroupMemberStatus" parameterType="long">
		UPDATE
			mategroup_member
		SET
			mategroup_agree = 2
		WHERE
			mg_no = (SELECT mg_no FROM mategroup WHERE pl_no = #{plNo})
	</update>
	
	<update id="updateGroupStatus" parameterType="long">
		UPDATE
			mategroup
		SET
			mategroup_status = '3단계'
		WHERE
			pl_no = #{plNo}
	</update>
	
	<select id="getMateGroupStatus" parameterType="long" resultType="String">
		SELECT
			mategroup_status
		FROM
			mategroup
		WHERE
			pl_no = #{plNo}
	</select>
	
	<select id="getAllMembers" parameterType="long" resultType="planerVO">
		SELECT
			*
		FROM
			members a, mategroup_member b
		WHERE
			a.mem_id = b.mategroup_id AND b.mg_no = (SELECT mg_no FROM mategroup WHERE pl_no = #{plNo}) AND b.mategroup_apply = 'Y'
	</select>
	
	<insert id="insertPointLog" parameterType="HashMap">
	    INSERT INTO POINTPAYMENT
	    (
	        POINT_NO,
	        POINT_ACCOUNT,
	        POINT_DATE,
	        POINT_TYPE,
	        POINT_CONTENT,
	        MEM_ID
	    )
	    VALUES
	    (
	        SEQ_POINTPAYMENT.NEXTVAL, 
	        #{pointAccount},        
	        SYSDATE,                
	        '차감',          
	        #{pointContent}, 
	        #{memId}         
	    )
	</insert>
	
	<select id="getCurrentGroupPoint" parameterType="long" resultType="int">
		SELECT
			mategroup_point
		FROM
			mategroup
		WHERE
			pl_no = #{plNo}
	</select>

	<select id="isAllDeducted" parameterType="long" resultType="int">
		SELECT
			count(*)
		FROM
			mategroup_member
		WHERE
			mg_no = (SELECT mg_no FROM mategroup WHERE pl_no = #{plNo}) AND mategroup_agree != 1
	</select>
	
	<insert id="insertSender" parameterType="rtsenderVO">
		<selectKey keyProperty="realsenNo" order="BEFORE" resultType="int">
			SELECT  
				seq_realtimesender.nextval
			FROM 
				dual
		</selectKey>
		INSERT INTO realtimesender (
		    realsen_no,
		    realsen_id,
		    realsen_name,
		    realsen_title,
		    realsen_content,
		    realsen_type,
		    realsen_url,
		    realsen_pfimg
		) VALUES (
		    #{realsenNo},
		    #{realsenId},
		    #{realsenName},
		    #{realsenTitle},
		    #{realsenContent},
		    #{realsenType},
		    #{realsenUrl},
		    #{realsenPfimg}
		)
	</insert>
	
	<insert id="insertReceiver" parameterType="rtsenderVO">
		INSERT INTO realtimereceiver (
		    realrec_no,
		    realrec_id,
		    realsen_readyn,
		    realsen_no
		) VALUES (
		    seq_realtimereceiver.nextval,
		    #{realrecId},
		    #{realsenReadyn},
		    #{realsenNo}
		)
	</insert>

</mapper>